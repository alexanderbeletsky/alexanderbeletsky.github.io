<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: analytics | Alexander Beletsky's development blog]]></title>
  <link href="http://beletsky.net/blog/categories/analytics/atom.xml" rel="self"/>
  <link href="http://beletsky.net/"/>
  <updated>2013-12-31T15:43:00+02:00</updated>
  <id>http://beletsky.net/</id>
  <author>
    <name><![CDATA[Alexander Beletsky]]></name>
    <email><![CDATA[alexander.beletsky@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Seismo - Analytics For Your Startup]]></title>
    <link href="http://beletsky.net/2013/12/analytics-for-your-startup.html"/>
    <updated>2013-12-05T15:32:00+02:00</updated>
    <id>http://beletsky.net/2013/12/analytics-for-your-startup</id>
    <content type="html"><![CDATA[<p>Sometimes ago I <a href="http://beletsky.net/2013/07/think-ahead-think-logging.html">wrote the post</a>, where was thinking about importance of logging of application state to clearly see what&rsquo;s going on inside and react accordingly. Logging is vital for any reliable system.</p>

<p>If <em>logging</em> is a must from development point of view, <em>analytics</em> is a must from business point of view. You would like to see, how many users signs-in and signs-up during the day, what actions they do inside the app, what issues they use all the time, what issues they never touch.</p>

<p>Following &ldquo;Invent Own Bicycle&rdquo; principle, I&rsquo;ve created small project to attack the problem &ndash; <a href="https://github.com/likeastore/seismo">Seismo</a>.</p>

<!-- More -->


<h2>Overview</h2>

<p>Right now, <a href="https://github.com/likeastore/seismo">seismo</a> repository is a bunch of javascript files and I&rsquo;m going to decouple project a bit to have it in more structured way. But in essence, there is REST API, with token-based authentication model, which allows you to push application events, store them to MongoDB and then build reports on those events.</p>

<p>To simplify the integration, there are <a href="https://github.com/likeastore/seismo-node-client">seismo-node-client</a>. It&rsquo;s <a href="https://github.com/mikeal/request">request</a>-based application, ready to use from Node.js backends. Very soon, I&rsquo;m going to add <a href="https://github.com/likeastore/seismo-browser-client">seismo-browser-client</a> to be used in browser.</p>

<p>To allow the deployment be as easy as possible, I want to pack seismo server as <a href="http://www.docker.io/">docker</a> image and put it to public <a href="https://index.docker.io/">index</a>, so it could be deployed on any Linux machine with few seconds.</p>

<h2>Other languages support</h2>

<p>For now, it has good support for JavaScript and Express.js platform. I wish to have support for other platforms like, Ruby, Python, .NET and Java. It&rsquo;s important not only to support particular languages, but support particular platform &ndash; so, we have good examples and reusable components for RoR, ASP.NET MVC or Spring.</p>

<h2>Dashboard</h2>

<p>Data is useless without visualization. Seismo project includes <a href="https://github.com/likeastore/seismo-dashboard">seismo-dashboard</a>.</p>

<p>It&rsquo;s pure client side application, build with Yeoman/Angular.js and could be deployed to any static server, it works great on <a href="http://pages.github.com/">gh-pages</a> as well.</p>

<p><img src="http://beletsky.net/images/blog/seismo-dashboard.png" alt="seismo dashboard" class="no-shadow" /></p>

<p>At the moment, the dashboard is not flexible at all. But I wish to create it fully customizable and widget based.</p>

<h2>Conclusion</h2>

<p>Even if we already used that for <a href="https://likeastore.com/">Likeastore</a> the project is far away from being generally used. The project currently is nothing more as prototype now, but I would like to improve it in nearest future, so I hope something interesting might came out.</p>
]]></content>
  </entry>
  
</feed>
